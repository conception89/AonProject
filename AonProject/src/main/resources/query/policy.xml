<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aonproject.admin.policy.dao.PolicyDAO">
	<resultMap type="com.aonproject.common.util.vo.Numbers" id="numbersQ">
		<result column="po_no" property="no" />
	</resultMap>
	
	<!-- 최근 등록된 약관 번호 가져오기 -->
	<select id="forLoop" resultType="java.lang.Integer">
		select po_no from (select * from policy order by po_no desc) where rownum = 1
	</select>
	
	<!-- policy po_no 전체 가져오기 -->
	<select id="numbers" resultMap="numbersQ">
		select po_no from policy order by po_no desc
	</select>
	
	<!-- po_no에 해당하는 policy_agr 데이터 전부 가져오기(excel) -->
	<select id="excelList" resultType="policyAgr" parameterType="policy">
	select po_no, po_name, to_char(po_date, 'yyyy-MM-dd hh24:mm:ss') po_date, sum2.a_no, a_id, m_no, m_id, pa_confirm, to_char(pa_date, 'yyyy-MM-dd hh24:mm:ss') pa_date from
	(select po_no, a_no, sum1.m_no, m_id, po_name, po_date, pa_confirm, pa_date from 
	(select po_no, a_no, m_no
	, po_name, po_date, pa_confirm, pa_date from 
	(select * from policy_agr where po_no = #{po_no}) policy_agr inner join 
	policy using(PO_NO)) sum1 left outer join member on member.m_no = sum1.m_no) sum2 left outer join
	admin on admin.a_no = sum2.a_no order by a_no, m_no, po_date desc, pa_date desc
	</select>
	
	<!-- 약관 조회 -->
	<select id="policyView1" resultType="policy">
		select * from (select po_no, po_name, po_content from policy where po_type = '1' order by po_no desc) where rownum = 1
	</select>
	<select id="policyView2" resultType="policy">
		select * from (select po_no, po_name, po_content from policy where po_type = '2' order by po_no desc) where rownum = 1
	</select>
	
	<!-- 약관 변경 -->
	<insert id="newPolicy" parameterType="policy">
		<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="po_no">
			select policy_seq.nextval from dual
		</selectKey>
		insert into policy(po_no, po_name, po_content, po_type) 
		values (#{po_no}, #{po_name}, #{po_content}, #{po_type})
	</insert>
	
	<!-- 관리자 약관 동의 -->
	<insert id="pagr" parameterType="admin">
		insert into policy_agr(po_no, a_no, pa_confirm) values(#{po_no}, #{a_no}, #{pa_confirm})
	</insert>
	
	<!-- 일반 유저 약관 동의 -->
	<insert id="pagr2" parameterType="policyAgr">
		insert into policy_agr(po_no, m_no, pa_confirm) values(#{po_no}, #{m_no}, #{pa_confirm})
	</insert>
	
	<!-- 최근 개인정보 이용 약관 동의 확인 _ 관리자 -->
	<select id="adminList" parameterType="admin" resultType="admin">
		select * from(
		select rownum as rnum, a_no,a_id, a_name, a_tel, a_email, po_name, pa_confirm, pa_date from(
		select member.a_no, a_id, a_name, a_tel, a_email, po_name, pa_confirm, to_char(pa_date, 'yyyy-MM-dd hh24:mm:ss') pa_date from
		(select a_no, po_name, pa_confirm, pa_date from
		(select po_no, po_name from (select * from policy where po_type = 2 order by po_no desc) policy where rownum = 1) policy inner join
		policy_agr 
		on policy_agr.PO_NO = policy.po_no) addPolicy inner join
		(select a_no, a_id, a_name, a_tel, a_email from admin 
		<where>
			<if test="adminSearch != ''">
				a_id like '%'||#{adminSearch}||'%'
			</if>
		</where> 
		order by a_no desc) member 
		on addPolicy.a_no = member.a_no order by pa_date desc
		) where rownum <![CDATA[<=]]> #{end_data})
		where rnum <![CDATA[>=]]> #{start_data}
	</select>
	
	<!-- 최근 개인정보 이용 약관 동의 확인 수 _ 관리자 -->
	<select id="adminListCnt" parameterType="admin" resultType="java.lang.Integer">
		select count(*) from 
		(
		select admin.a_no, a_id, a_name, a_tel, a_email, po_name, pa_confirm, to_char(pa_date, 'yyyy-MM-dd hh24:mm:ss') pa_date from
		(select a_no, po_name, pa_confirm, pa_date from
		(select po_no, po_name from (select * from policy where po_type = 2 order by po_no desc) policy where rownum = 1) policy inner join
		policy_agr 
		on policy_agr.PO_NO = policy.po_no) addPolicy inner join
		(select a_no, a_id, a_name, a_tel, a_email from admin
		<where>
			<if test="adminSearch != ''">
				a_id like '%'||#{adminSearch}||'%'
			</if>
		</where> 
		order by a_no desc) admin 
		on addPolicy.a_no = admin.a_no order by pa_date desc
		)
	</select>
	
	<!-- 최근 개인정보 이용 약관 동의 확인 _ 회원 -->
	<select id="memberList" parameterType="member" resultType="policyAgr">
		select * from(
		select rownum as rnum, po_no, m_no, m_id, m_name, m_tel, m_email, po_name, pa_confirm, pa_date from(
		select po_no, member.m_no, m_id, m_name, m_tel, m_email, po_name, pa_confirm, to_char(pa_date, 'yyyy-MM-dd hh24:mm:ss') pa_date from
		(select policy.po_no, m_no, po_name, pa_confirm, pa_date from
		(select po_no, po_name, po_type from policy inner join (select max(po_no) po_no from policy group by po_type) policyg using(po_no) order by po_type) policy inner join
		policy_agr 
		on policy_agr.PO_NO = policy.po_no) addPolicy inner join
		(select m_no, m_id, m_name, m_tel, m_email from member
		<where>
			<if test="memberSearch != ''">
				m_id like '%'||#{memberSearch}||'%'
			</if>
		</where>
		order by m_no desc) member 
		on addPolicy.m_no = member.m_no order by pa_date, m_id desc
		) where rownum <![CDATA[<=]]> #{end_data})
		where rnum <![CDATA[>=]]> #{start_data}
	</select>
	
	<!-- 최근 개인정보 이용 약관 동의 확인 수 _ 회원 -->
	<select id="memberListCnt" parameterType="member" resultType="java.lang.Integer">
		select count(*) from 
		(
		select member.m_no, m_id, m_name, m_tel, m_email, po_name, pa_confirm, to_char(pa_date, 'yyyy-MM-dd hh24:mm:ss') pa_date from
		(select m_no, po_name, pa_confirm, pa_date from
		(select po_no, po_name, po_type from policy inner join (select max(po_no) po_no from policy group by po_type) policyg using(po_no) order by po_type) policy inner join
		policy_agr 
		on policy_agr.PO_NO = policy.po_no) addPolicy inner join
		(select m_no, m_id, m_name, m_tel, m_email from member 
		<where>
			<if test="memberSearch != ''">
				m_id like '%'||#{memberSearch}||'%'
			</if>
		</where> 
		order by m_no desc) member 
		on addPolicy.m_no = member.m_no order by pa_date, m_id desc
		)
	</select>
	
	<!-- 약관 거부 -->
	<update id="policyAgrDenial" parameterType="policyAgr">
		update policy_agr set pa_confirm = #{pa_confirm} where po_no = #{po_no} and m_no = #{m_no}
	</update>
</mapper>