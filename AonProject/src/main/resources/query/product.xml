<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aonproject.admin.product.dao.ProductDAO">
	<!-- 상품 리스트 조회 -->
	<select id="productList" resultType="product" parameterType="product">
		/* product - productList */
		select substr(p_no,1,5) as p_no, category.ca_name, p_type_cd.cc_name "p_type_name", p_name, p_price, p_discount, 
			   p_info, color_cd.cc_name "color", color_code, upper(size_cd.cc_name) "size", size_code, p_fabric, p_caution, 
			   to_char(p_Date, 'yyyy-mm-dd HH24:MI:SS') p_date
		from product 
		left join category on product.ca_no = category.ca_no 
		left join common_code size_cd on upper(product.size_code) = upper(size_cd.cc_no)
		left join common_code color_cd on upper(product.color_code) = upper(color_cd.cc_no)
		left join common_code p_type_cd on upper(product.p_type) = upper(p_type_cd.cc_no)
		<where>
			<if test="ca_no != 0">
				product.ca_no = #{ca_no} and
			</if>
			p_del = 'n'
		</where> 
		order by p_date desc, p_no desc
	</select>
	
	<!-- 상품 리스트 조회 -->
	<select id="productForCategory" resultType="product" parameterType="product">
		select product.p_no, product.p_name, product.p_type, product.p_price, product.p_discount, 
		product.ca_no, p3.pi_file, product.p_caution, p_info
		from (select * from product where rowid in(select max(rowid) from product group by substr(p_no,1,7)) and ca_no = #{ca_no}) product 
		inner join (select * from product_img inner join (select min(pi_no) pi_no 
		from product_img group by p_no) p2 on product_img.pi_no = p2.pi_no) p3 on product.p_no = p3.p_no order by p_no desc
	</select>
	
	<!-- 상품  디테일 조회 -->
	<select id="productDetail" resultType="product" parameterType="product">
		/* product - productDetail */
		<!-- select p_no, category.ca_name, p_type_cd.cc_name "p_type_name", p_name, p_price, p_discount, 
			   p_info, color_cd.cc_name "color", color_code, upper(size_cd.cc_name) "size", size_code, p_fabric, p_caution, 
			   to_char(p_Date, 'yyyy-mm-dd HH24:MI:SS') p_date
		from product 
		left join category on product.ca_no = category.ca_no 
		left join common_code size_cd on upper(product.size_code) = upper(size_cd.cc_no)
		left join common_code color_cd on upper(product.color_code) = upper(color_cd.cc_no)
		left join common_code p_type_cd on upper(product.p_type) = upper(p_type_cd.cc_no)
		where p_no = upper(#{p_no}) -->
		
		select product.p_no, category.ca_name, p_type_cd.cc_name "p_type_name", product.p_name, product.p_price, product.p_discount, p3.pi_file,
			   p_info, color_cd.cc_name "color", color_code, upper(size_cd.cc_name) "size", size_code, p_fabric, p_caution, 
			   to_char(product.p_Date, 'yyyy-mm-dd HH24:MI:SS') p_date
		from product 
		left join category on product.ca_no = category.ca_no 
		left join common_code size_cd on upper(product.size_code) = upper(size_cd.cc_no)
		left join common_code color_cd on upper(product.color_code) = upper(color_cd.cc_no)
		left join common_code p_type_cd on upper(product.p_type) = upper(p_type_cd.cc_no)
    	inner join (select * from product_img inner join (select min(pi_no) pi_no from product_img group by p_no) p2 on product_img.pi_no = p2.pi_no) p3 on product.p_no = p3.p_no
		where product.p_no like #{p_no} || '%' and rownum = 1
	</select>
	
	<!-- 상품번호 생성 -->
	<select id="createP_no" resultType="String">
		select product_seq.nextval from dual
	</select>
	
	<!-- 상품 신규등록 -->
	<insert id="productInsert" parameterType="product">
		/* product - productInsert */
		insert into product(p_no, p_type, p_name, p_info, p_price, p_discount, color_code, size_code, p_fabric, p_caution, ca_no, p_del) 
					 values(upper(#{p_no}), #{p_type}, #{p_name}, #{p_info}, #{p_price}, #{p_discount}, #{color_code}, #{size_code}, #{p_fabric}, #{p_caution}, #{ca_no}, #{p_del})
	</insert>
	
	<!-- 상품 정보 업데이트 -->
	<update id="productUpdate" parameterType="product">
		/* product - productUpdate */
		update product set p_name = #{p_name},
						   p_info = #{p_info},
						   p_price = #{p_price},
						   p_discount = #{p_discount},
						   color_code = #{color_code},
						   size_code = #{size_code},
						   p_fabric = #{p_fabric},
						   p_caution = #{p_caution},
						   ca_no = #{ca_no},
						   p_type = #{p_type}
		where p_no = #{p_no}
	</update>
	
	<update id="productDelete" parameterType="product">
		/* product - productDelete */
		update product set p_del = #{p_del} where p_no = #{p_no}
	</update>
</mapper>